---
interface Props {
  title?: string;
  className?: string;
  background?: "bg-background" | "bg-red" | "bg-bgDark";
  full?: boolean;
}
const { title, background = "", className, full } = Astro.props;
---

<div
  class:list={[
    "slide-item snap-always snap-start sm:snap-none px-[10vw]",
    "overflow-hidden flex flex-col scroll-mt-[100px] items-center",
    full && "min-h-full px-0",
    background,
    className,
  ]}
  id={title ? escape(title) : undefined}
  data-title={title}
>
  <div
    class=`w-full overflow-x-hidden max-w-7xl flex flex-col ${full && 'flex-1'}`
  >
    <slot />
  </div>
</div>

<script>
  window.addEventListener(
    "DOMContentLoaded",
    function () {
      const slides = document.querySelectorAll(".slide-item");
      if (!slides) {
        return;
      }

      let options = {
        rootMargin: "0px",
        threshold: 0.7,
      };

      let observer = new IntersectionObserver((entries) => {
        entries.forEach(({ target, isIntersecting }) => {
          if (!isIntersecting) {
            return;
          }
          const title = target.getAttribute("data-title") || "Intro";
          window.gtag("event", "screen_view", {
            screen_name: title,
          });
          window.gtag("event", "slide", {
            content_type: "slide",
            content_id: title,
          });
          observer.unobserve(target);
        });
      }, options);

      slides.forEach((slide) => observer.observe(slide));
    },
    false
  );
</script>
